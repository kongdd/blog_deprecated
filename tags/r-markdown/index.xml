<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Markdown on 孔sysu</title>
    <link>/tags/r-markdown/</link>
    <description>Recent content in R Markdown on 孔sysu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 03 Aug 2019 21:13:14 -0500</lastBuildDate>
    
	<atom:link href="/tags/r-markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GEE Whittaker smoother</title>
      <link>/2019/08/03/gee-whittaker-smoother/</link>
      <pubDate>Sat, 03 Aug 2019 21:13:14 -0500</pubDate>
      
      <guid>/2019/08/03/gee-whittaker-smoother/</guid>
      <description>1 Whittaker介绍2 bisquare权重调整(Modified bisquare weights updating )3 生成新的时间序列 (Generating new time series)4 References1 Whittaker介绍不可否认Savitzky-Golay (SG)是一个非常优秀的平滑算法，奈何计算效率太低，使其在Google Earth Engine (GEE) 根本无法使用。两年过去了，很多GEE developers依然执着于SG，不断问SG在GEE上如何应用。
由于SG是一个逐步回归，回归次数较多，因此他通常会比HANTS, Whittaker慢几十倍，在GEE上应用基本无望。
本文主要介绍一种改进的Whittaker，特意为GEE设计的一个平滑算法: weighted Whittaker with dynamiclambda。它主要在两个方面对Whittaker进行了改进:
自动优化Whittaker的参数lambda，根据植被曲线特征指数(mean, sd, cv, skewness and kurtosis)
加入weights updating function (modified Bisquare)
The calibration and validation script in R language is available in https://github.com/kongdd/gee_whittaker.
The GEE Whittaker is available in https://github.</description>
    </item>
    
    <item>
      <title>Fourier curve fitting for periodic component</title>
      <link>/2015/08/03/fourier-curve-fitting-for-periodic-component/</link>
      <pubDate>Mon, 03 Aug 2015 21:13:14 -0500</pubDate>
      
      <guid>/2015/08/03/fourier-curve-fitting-for-periodic-component/</guid>
      <description>1 傅里叶变换1.1 离散型傅里叶变换1.2 快速傅里叶变换2 References1 傅里叶变换#include &amp;lt;stdio.h&amp;gt;int main(void){printf(&amp;quot;Hello world!&amp;quot;),return 0;}wave.3 &amp;lt;- 0.5 * wave.1 + 0.25 * wave.2plot(xs,wave.3,type=&amp;quot;l&amp;quot;) title(&amp;quot;Eg complex wave&amp;quot;)abline(h=0,lty=3)repeat.xs &amp;lt;- seq(-2*pi,0,pi/100)wave.3.repeat &amp;lt;- 0.5*sin(3*repeat.xs) + 0.25*sin(10*repeat.xs)plot(xs,wave.3,type=&amp;quot;l&amp;quot;) title(&amp;quot;Repeating pattern&amp;quot;)points(repeat.xs,wave.3.repeat,type=&amp;quot;l&amp;quot;,col=&amp;quot;red&amp;quot;) abline(h=0,v=c(-2*pi,0),lty=3)1.1 离散型傅里叶变换主要公式：\[\begin{equation}X t=\frac{a_{0}}{2}+\sum_{i=1}^{m}\left[a_{i} \cos \left(\frac{2 \pi i}{N} t\right)+b_{i} \sin \left(\frac{2 \pi i}{N} t\right)\right]\end{equation}\]</description>
    </item>
    
  </channel>
</rss>